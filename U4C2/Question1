Is-a relationship is when we have 2 classes, and they have a parent-child relationship. Suppose we have a class dog, and a parent class animal. Here, dog extends Animal, meaning that all the instances and methods in animal like legs(), eyes(), mouth() etc are accessible by the dog which can access it by the super() method.  Dog can also override methods from Animal. To use methods from the parent class/child class, upcasting, and downcasting is needed when appropriate.
Has-a relationship is when there are 2 classes in the same location, and they are not in a parent-child relationship, but rather in this case,  we can use the instances and methods from one class in another. This helps in code reusability and our classes can be cleanly written. 
